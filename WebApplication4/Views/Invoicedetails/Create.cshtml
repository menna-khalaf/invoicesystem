@model WebApplication4.Models.Invoicedetail

@{
    ViewData["Title"] = "Create";
}
<style>
    #messageArea {
        margin-bottom: 20px;
        padding: 15px;
        border-radius: 5px;
        font-size: 16px;
    }
</style>
<div class="container mt-4">


    <div class="container mt-4">
        <!-- Message Area -->
        <div id="messageArea" class="alert alert-danger" style="display: none;"></div>
    <!-- Display Invoice ID -->
    <div class="mb-4 text-center">
        <h4 class="text-primary">رقم الطلب / @ViewBag.InvoiceId</h4>
    </div>

    <!-- Table for Invoice Details -->
    <div class="table-responsive">
        <table class="table table-bordered text-center">
            <thead class="bg-info text-white">
                <tr>
                    <th>إضافة صف</th>
                    <th>اسم الأداة</th>
                    <th>الكمية</th>
                    <th>سعر الوحدة</th>
                </tr>
            </thead>
            <tbody id="invoiceTable">
                <tr>
                    <td><button type="button" class="btn btn-outline-primary add-row">+</button></td>
                    <td>
                        <select name="ProductId" class="form-control product-select">
                            <option value="">-- اختر الأداة --</option>
                            @foreach (var item in ViewBag.ProductId)
                            {
                                int productId = Convert.ToInt32(item.Value); // Convert string to int
                                <option value="@productId" data-price="@ViewBag.ProductPrices[productId]">@item.Text</option>
                            }
                        </select>
                    </td>
                    <td><input type="number" name="Quantity" class="form-control quantity" placeholder="الكمية" min="1"></td>
                    <td><input type="number" name="UnitPrice" class="form-control unit-price" placeholder="السعر" readonly></td>
                </tr>
            </tbody>
        </table>
    </div>

    <!-- Save Button -->
    <div class="text-center">
        <button type="button" id="saveInvoice" class="btn btn-primary btn-lg">حفظ</button>
    </div>
</div>

@section Scripts {
    <script>

            $(document).ready(function () {
                // Function to display messages in the message area
                function showMessage(message, isError = true) {
                    var messageArea = $("#messageArea");
                    messageArea.text(message); // Set the message text
                    messageArea.removeClass("alert-success alert-danger"); // Remove existing classes
                    messageArea.addClass(isError ? "alert-danger" : "alert-success"); // Add appropriate class
                    messageArea.show(); // Show the message area

                    // Hide the message after 5 seconds
                    setTimeout(function () {
                        messageArea.hide();
                    }, 5000);
                }

                // Function to update price based on selected product
                function updatePrice(selectElement) {
                    var selectedOption = $(selectElement).find("option:selected");
                    var price = selectedOption.data("price"); // Get price from data attribute
                    $(selectElement).closest("tr").find(".unit-price").val(price || ""); // Update price field
                }

                // When selecting a product, update price
                $(document).on("change", ".product-select", function () {
                    updatePrice(this);
                });

                // Add new row with product selection and auto price update
                $(document).on("click", ".add-row", function () {
                    var newRow = `<tr>
                                    <td><button type="button" class="btn btn-outline-danger remove-row">-</button></td>
                                    <td>
                                        <select name="ProductId" class="form-control product-select">
                                            <option value="">-- اختر الأداة --</option>
            @foreach (var item in ViewBag.ProductId)
            {
                int productId = Convert.ToInt32(item.Value);
                                                    <option value="@productId" data-price="@ViewBag.ProductPrices[productId]">@item.Text</option>
            }
                                        </select>
                                    </td>
                                    <td><input type="number" name="Quantity" class="form-control quantity" placeholder="الكمية" min="1"></td>
                                    <td><input type="number" name="UnitPrice" class="form-control unit-price" placeholder="السعر" readonly></td>
                                </tr>`;
                    $("#invoiceTable").append(newRow);
                });

                // Remove row
                $(document).on("click", ".remove-row", function () {
                    $(this).closest("tr").remove();
                });

                // Validate quantity against balance
                $(document).on("input", ".quantity", function () {
                    var quantity = $(this).val();
                    var balance = $(this).closest("tr").find(".product-select").find("option:selected").data("balance");

                    if (parseInt(quantity) > parseInt(balance)) {
                        showMessage(`الكمية المدخلة (${quantity}) أكبر من الرصيد المتاح (${balance}). يرجى إدخال كمية أقل.`);
                        $(this).val(balance); // Reset the quantity to the maximum available balance
                    }
                });

                // Save invoice data
                $("#saveInvoice").click(function () {
                    var invoiceData = [];
                    $("#invoiceTable tr").each(function () {
                        var product = $(this).find("select[name='ProductId']").val();
                        var quantity = $(this).find("input[name='Quantity']").val();
                        var unitPrice = $(this).find("input[name='UnitPrice']").val();
                        var lineTotal = quantity * unitPrice; // حساب LineTotal

                        if (product && quantity && unitPrice) {
                            var item = {
                                InvoiceId: @ViewBag.InvoiceId,
                                ProductId: product,
                                Quantity: parseInt(quantity),
                                UnitPrice: parseFloat(unitPrice),
                                LineTotal: parseFloat(lineTotal) // إضافة LineTotal
                            };

                            invoiceData.push(item);
                        }
                    });

                    // 🛑 تأكيد القيم قبل الإرسال
                    console.log("🔹 البيانات المرسلة للخادم:", invoiceData);

                    if (invoiceData.length > 0) {
                        $.ajax({
                            url: "@Url.Action("Create", "Invoicedetails")",
                            type: "POST",
                            contentType: "application/json",
                            data: JSON.stringify(invoiceData),
                            success: function (response) {
                                console.log("✅ استجابة الخادم:", response);
                                if (response.success) {
                                    showMessage(response.message, false); // Show success message
                                    location.reload();
                                } else {
                                    showMessage(response.message); // Show error message
                                    console.error("تفاصيل الخطأ:", response.errorDetails);
                                }
                            },
                            error: function (xhr, status, error) {
                                showMessage("❌ حدث خطأ أثناء الحفظ!"); // Show error message
                                console.error("خطأ AJAX:", xhr.responseText);
                            }
                        });
                    } else {
                        showMessage("❌ يرجى إدخال البيانات بشكل صحيح."); // Show error message
                    }
                });
            });
    </script>
}